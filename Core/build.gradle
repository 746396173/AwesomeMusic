apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlinx-serialization'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    signingConfigs {
        configuration {
            keyAlias "kaibo"
            keyPassword "kaibo123"
            storeFile file("my1.jks")
            storePassword "kaibo123"
        }
    }

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a', 'x86'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        signingConfig signingConfigs.configuration
    }

    buildTypes {
        release {
            minifyEnabled false
        }

        debug {
            minifyEnabled false
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    lintOptions {
        disable "MissingTranslation"
        disable 'GoogleAppIndexingWarning'
        abortOnError false
    }

    compileOptions {
        sourceCompatibility rootProject.sourceCompatibility
        targetCompatibility rootProject.targetCompatibility
    }
}

//依赖传递
//configurations.all {
//    transitive = true
//}

dependencies {
    testImplementation junit
    androidTestImplementation androidx_test_runner
    androidTestImplementation androidx_test_espresso_core
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // kotlin 基础库
    implementation kotlin_stdlib

    // 调试日志输出
    api debug_logger
    api androidx_material
    api androidx_multidex
    api androidx_v4
    api androidx_cardview
    api androidx_appcompat
    api androidx_recyclerview
    api androidx_constraintlayout
    // 数据库 ORM 框架
    api androidx_room_runtime
    api androidx_room_rxjava2
//    kapt room_compiler

    api gson
    api gson_converter
    // rx相关
    api rxjava2
    api rxandroid
    api rxbinding
    // 生命周期自动解绑
    api auto_dispose
    api auto_dispose_archcomponents
    // 网络请求相关
    api okhttp
    api okhttp_logger
    api retrofit
    // retrofit rxjava适配器
    api retrofit_rxjava2_adapter
    // 协程
    api coroutines_android
    // retrofit 协程适配器
    api retrofit_coroutines_adapter
    // json 序列化库
    api serialization_runtime
    // retrofit  json序列化  适配器
    api retrofit_serialization_converter
    // 等待动画
    api android_spin_kit
    // flex布局
    api flexbox
    // 屏幕适配
    api autosize
    // 轮播组件
    api xbanner

    api project(':RxPermissions')
    api project(':uCrop')

    api rxrelay2
    api zxing

    api glide
    api glide_okhttp
    kapt glide_compiler
}
